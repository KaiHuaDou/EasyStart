namespace StartPro.Tile;
public partial class TileBase
{
    // 该删，我好不容易写的，真不想删，故此保留

    /*
     * public void InitializeComponent( )
     * {
     *     MouseLeftButtonDown += TileDragStart;
     *     MouseLeftButtonUp += TileLeftButtonUp;
     *     MouseMove += TileDragging;
     *     Resources.Add("Converters", new ResourceDictionary
     *     {
     *         { "RadiusConverter", new RadiusConverter( ) },
     *         { "SizeConverter", new SizeConverter( ) },
     *         { "MarginConverter", new MarginConverter( ) }
     *     });
     *
     *     Grid mainGrid = new( );
     *
     *     #region maskBorder
     *     Panel.SetZIndex(maskBorder, 2);
     *     Style maskBorderStyle = new( ) { TargetType = typeof(Border) };
     *     maskBorderStyle.Setters.Add(new Setter( )
     *     {
     *         Property = BackgroundProperty,
     *         Value = Brushes.Transparent
     *     });
     *     Trigger mouseOverTrigger = new( )
     *     {
     *         Property = IsMouseOverProperty,
     *         Value = true,
     *     };
     *     mouseOverTrigger.Setters.Add(new Setter( )
     *     {
     *         Property = BackgroundProperty,
     *         Value = new LinearGradientBrush( )
     *         {
     *             StartPoint = new Point(0, 0),
     *             EndPoint = new Point(0, 1),
     *             GradientStops =
     *             {
     *                 new GradientStop(Color.FromArgb(0x34,0xC5,0xEB,0xFF),0),
     *                 new GradientStop(Color.FromArgb(0x34,0x81,0xD8,0xFF),1)
     *             }
     *         }
     *     });
     *     maskBorderStyle.Triggers.Add(mouseOverTrigger);
     *     DataTrigger isDragTrigger = new( )
     *     {
     *         Binding = new Binding("IsDrag") { ElementName = "userControl" },
     *         Value = true
     *     };
     *     isDragTrigger.Setters.Add(new Setter( )
     *     {
     *         Property = BackgroundProperty,
     *         Value = new LinearGradientBrush( )
     *         {
     *             StartPoint = new Point(0, 0),
     *             EndPoint = new Point(0, 1),
     *             GradientStops =
     *             {
     *                 new GradientStop(Color.FromArgb(0x34,0xD9,0xF4,0xFF),0),
     *                 new GradientStop(Color.FromArgb(0x34,0x9B,0xDD,0xFB),1)
     *             }
     *         }
     *     });
     *     maskBorderStyle.Triggers.Add(isDragTrigger);
     *     maskBorder.Style = maskBorderStyle;
     *     mainGrid.Children.Add(maskBorder);
     *     #endregion
     *
     *     #region border
     *     border = new( )
     *     {
     *         Background = new Binding("TileColor"),
     *         BorderBrush = new SolidColorBrush(Color.FromRgb(0xCD, 0xD3, 0xE6)),
     *         BorderThickness = new Thickness(1),
     *     };
     *     TileShadowEffect = new( )
     *     {
     *         Opacity = 0.4,
     *         Color = Color.FromRgb(0x02, 0x02, 0x02),
     *     };
     *     border.Effect = TileShadowEffect;
     *     mainGrid.Children.Add(border);
     *     #endregion
     *
     *     UIElement content = Content as UIElement;
     *     border.Child = content;
     *     Content = border;
     * }
     */
}

